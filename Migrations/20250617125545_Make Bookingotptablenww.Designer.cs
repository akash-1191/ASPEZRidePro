// <auto-generated />
using System;
using EZRide_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EZRide_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250617125545_Make Bookingotptablenww")]
    partial class MakeBookingotptablenww
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EZRide_Project.Model.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("BookingType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cancelreasion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PerKelomeater")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDistance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TotalHours")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.BookingOTP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailSentTo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("OTPCode")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingOTPs");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(255)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Conversation", b =>
                {
                    b.Property<int>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConversationId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.CustomerDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("AddressProofPath")
                        .HasColumnType("Varchar(150)");

                    b.Property<string>("AgeProofPath")
                        .HasColumnType("Varchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DLImagePath")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerDocuments");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.DamageReport", b =>
                {
                    b.Property<int>("DamageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamageId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("RepairCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(80)");

                    b.HasKey("DamageId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("DamageReports");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.FuelLog", b =>
                {
                    b.Property<int>("FuelLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuelLogId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FuelCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("FuelGiven")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("FuelReturned")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.HasKey("FuelLogId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("FuelLogs");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.OwnerPayment", b =>
                {
                    b.Property<int>("OwnerPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerPaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("OwnerPaymentId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("OwnerPayments");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.PricingRule", b =>
                {
                    b.Property<int>("PricingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PricingId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PricePerDay")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("PricePerHour")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("PricePerKm")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("PricingId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("PricingRules");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Description = "System Administrator",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Description = "Normal User",
                            RoleName = "OwnerVehicle"
                        },
                        new
                        {
                            RoleId = 3,
                            Description = "Vehicle Owner",
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.SecurityDeposit", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefundedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("DepositId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("SecurityDeposits");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Middlename")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("AcAvailability")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BikeName")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("CarName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EngineCapacity")
                        .HasColumnType("int");

                    b.Property<decimal>("FuelTankCapacity")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InsuranceStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("RcStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("SeatingCapacity")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("SecurityDepositAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Vehicletype")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.VehicleImage", b =>
                {
                    b.Property<int>("VehicleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleImageId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("VehicleImageId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleImages");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Booking", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EZRide_Project.Model.Entities.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.BookingOTP", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Contact", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", null)
                        .WithMany("Contacts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Conversation", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", "User")
                        .WithMany("Conversations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.CustomerDocument", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", "User")
                        .WithMany("CustomerDocuments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.DamageReport", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Booking", "Booking")
                        .WithOne("DamageReport")
                        .HasForeignKey("EZRide_Project.Model.Entities.DamageReport", "BookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Feedback", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.FuelLog", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Booking", "Booking")
                        .WithOne("FuelLog")
                        .HasForeignKey("EZRide_Project.Model.Entities.FuelLog", "BookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.OwnerPayment", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", "User")
                        .WithMany("OwnerPayments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EZRide_Project.Model.Entities.Vehicle", "Vehicle")
                        .WithMany("OwnerPayments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Payment", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("EZRide_Project.Model.Entities.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.PricingRule", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Vehicle", "Vehicle")
                        .WithOne("PricingRule")
                        .HasForeignKey("EZRide_Project.Model.Entities.PricingRule", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.SecurityDeposit", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Booking", "Booking")
                        .WithOne("SecurityDeposit")
                        .HasForeignKey("EZRide_Project.Model.Entities.SecurityDeposit", "BookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.User", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Vehicle", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.VehicleImage", b =>
                {
                    b.HasOne("EZRide_Project.Model.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleImages")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Booking", b =>
                {
                    b.Navigation("DamageReport")
                        .IsRequired();

                    b.Navigation("FuelLog")
                        .IsRequired();

                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("SecurityDeposit")
                        .IsRequired();
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Contacts");

                    b.Navigation("Conversations");

                    b.Navigation("CustomerDocuments");

                    b.Navigation("Feedbacks");

                    b.Navigation("OwnerPayments");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("EZRide_Project.Model.Entities.Vehicle", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("OwnerPayments");

                    b.Navigation("PricingRule")
                        .IsRequired();

                    b.Navigation("VehicleImages");
                });
#pragma warning restore 612, 618
        }
    }
}
